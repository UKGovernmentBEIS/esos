<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
        logicalFilePath="v0.1.0/changelog_mi_reports.xml"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.11.xsd">

   <changeSet id="0_1_0_drop_ca_reporting_views" author="P70453" runOrder="first" runAlways="true">
        <validCheckSum>ANY</validCheckSum>
        <sql>
            drop view if exists sch_report_sepa.request_task_visit cascade;
            drop view if exists sch_report_sepa.request_task cascade;
            drop view if exists sch_report_sepa.request_action cascade;
            drop view if exists sch_report_sepa.request cascade;
            drop view if exists sch_report_sepa.au_authority_permission cascade;
            drop view if exists sch_report_sepa.au_authority cascade;
            drop view if exists sch_report_sepa.au_role cascade;
            drop view if exists sch_report_sepa.au_role_permission cascade;
            drop view if exists sch_report_sepa.account_contact cascade;
            drop view if exists sch_report_sepa.account_ca_external_contacts cascade;
            drop view if exists sch_report_sepa.account cascade;
            drop view if exists sch_report_sepa.verification_body_emission_trading_scheme cascade;
            drop view if exists sch_report_sepa.verification_body cascade;

            drop view if exists sch_report_opred.request_task_visit cascade;
            drop view if exists sch_report_opred.request_task cascade;
            drop view if exists sch_report_opred.request_action cascade;
            drop view if exists sch_report_opred.request cascade;
            drop view if exists sch_report_opred.au_authority_permission cascade;
            drop view if exists sch_report_opred.au_authority cascade;
            drop view if exists sch_report_opred.au_role cascade;
            drop view if exists sch_report_opred.au_role_permission cascade;
            drop view if exists sch_report_opred.account_contact cascade;
            drop view if exists sch_report_opred.account_ca_external_contacts cascade;
            drop view if exists sch_report_opred.account cascade;
            drop view if exists sch_report_opred.verification_body_emission_trading_scheme cascade;
            drop view if exists sch_report_opred.verification_body cascade;

            drop view if exists sch_report_nrw.request_task_visit cascade;
            drop view if exists sch_report_nrw.request_task cascade;
            drop view if exists sch_report_nrw.request_action cascade;
            drop view if exists sch_report_nrw.request cascade;
            drop view if exists sch_report_nrw.au_authority_permission cascade;
            drop view if exists sch_report_nrw.au_authority cascade;
            drop view if exists sch_report_nrw.au_role cascade;
            drop view if exists sch_report_nrw.au_role_permission cascade;
            drop view if exists sch_report_nrw.account_contact cascade;
            drop view if exists sch_report_nrw.account_ca_external_contacts cascade;
            drop view if exists sch_report_nrw.account cascade;
            drop view if exists sch_report_nrw.verification_body_emission_trading_scheme cascade;
            drop view if exists sch_report_nrw.verification_body cascade;

            drop view if exists sch_report_niea.request_task_visit cascade;
            drop view if exists sch_report_niea.request_task cascade;
            drop view if exists sch_report_niea.request_action cascade;
            drop view if exists sch_report_niea.request cascade;
            drop view if exists sch_report_niea.au_authority_permission cascade;
            drop view if exists sch_report_niea.au_authority cascade;
            drop view if exists sch_report_niea.au_role cascade;
            drop view if exists sch_report_niea.au_role_permission cascade;
            drop view if exists sch_report_niea.account_contact cascade;
            drop view if exists sch_report_niea.account_ca_external_contacts cascade;
            drop view if exists sch_report_niea.account cascade;
            drop view if exists sch_report_niea.verification_body_emission_trading_scheme cascade;
            drop view if exists sch_report_niea.verification_body cascade;

            drop view if exists sch_report_ea.request_task_visit cascade;
            drop view if exists sch_report_ea.request_task cascade;
            drop view if exists sch_report_ea.request_action cascade;
            drop view if exists sch_report_ea.request cascade;
            drop view if exists sch_report_ea.au_authority_permission cascade;
            drop view if exists sch_report_ea.au_authority cascade;
            drop view if exists sch_report_ea.au_role cascade;
            drop view if exists sch_report_ea.au_role_permission cascade;
            drop view if exists sch_report_ea.account_contact cascade;
            drop view if exists sch_report_ea.account_ca_external_contacts cascade;
            drop view if exists sch_report_ea.account cascade;
            drop view if exists sch_report_ea.verification_body_emission_trading_scheme cascade;
            drop view if exists sch_report_ea.verification_body cascade;

        </sql>
        <rollback>
        </rollback>
    </changeSet>

    <changeSet id="0_1_0_create_ca_reporting_views" author="P70453" runOrder="last" runAlways="true">
        <validCheckSum>ANY</validCheckSum>
        <sql>
            create or replace view sch_report_sepa.account as select s.* from account s where s.competent_authority = 'SCOTLAND';
            create or replace view sch_report_sepa.account_contact as select s.* from account_contact s where exists (select null from account a where a.id = s.account_id and a.competent_authority = 'SCOTLAND');
            create or replace view sch_report_sepa.account_ca_external_contacts as select s.* from account_ca_external_contacts s where s.competent_authority = 'SCOTLAND';
            create or replace view sch_report_sepa.au_authority as select s.* from au_authority s where s.competent_authority = 'SCOTLAND' or s.verification_body_id is not null or exists (select null from account a where a.id = s.account_id and a.competent_authority = 'SCOTLAND');
            create or replace view sch_report_sepa.au_authority_permission as select s.* from au_authority_permission s where exists (select null from au_authority aa where aa.id = s.authority_id and (aa.competent_authority = 'SCOTLAND' or aa.verification_body_id is not null or exists (select null from account a where a.id = aa.account_id and a.competent_authority = 'SCOTLAND')));
            create or replace view sch_report_sepa.au_role as select s.* from au_role s;
            create or replace view sch_report_sepa.au_role_permission as select s.* from au_role_permission s;
            create or replace view sch_report_sepa.request as select id, type, status, creation_date, competent_authority, account_id, verification_body_id, payload, submission_date, metadata, end_date from request s where s.competent_authority = 'SCOTLAND';
            create or replace view sch_report_sepa.request_action as select s.* from request_action s where exists (select null from request r where r.id = s.request_id and r.competent_authority = 'SCOTLAND');
            create or replace view sch_report_sepa.request_task as select id, request_id, type, assignee, due_date, start_date, pause_date, payload, version from request_task s where exists (select null from request r where r.id = s.request_id and r.competent_authority = 'SCOTLAND');
            create or replace view sch_report_sepa.request_task_visit as select s.* from request_task_visit s where exists (select null from request_task rt join request r on r.id = rt.request_id where rt.id = s.task_id and r.competent_authority = 'SCOTLAND');
            create or replace view sch_report_sepa.verification_body as select s.* from verification_body s;
            create or replace view sch_report_sepa.verification_body_emission_trading_scheme as select s.* from verification_body_emission_trading_scheme s;

            create or replace view sch_report_opred.account as select s.* from account s where s.competent_authority = 'OPRED';
            create or replace view sch_report_opred.account_contact as select s.* from account_contact s where exists (select null from account a where a.id = s.account_id and a.competent_authority = 'OPRED');
            create or replace view sch_report_opred.account_ca_external_contacts as select s.* from account_ca_external_contacts s where s.competent_authority = 'OPRED';
            create or replace view sch_report_opred.au_authority as select s.* from au_authority s where s.competent_authority = 'OPRED' or s.verification_body_id is not null or exists (select null from account a where a.id = s.account_id and a.competent_authority = 'OPRED');
            create or replace view sch_report_opred.au_authority_permission as select s.* from au_authority_permission s where exists (select null from au_authority aa where aa.id = s.authority_id and (aa.competent_authority = 'OPRED' or aa.verification_body_id is not null or exists (select null from account a where a.id = aa.account_id and a.competent_authority = 'OPRED')));
            create or replace view sch_report_opred.au_role as select s.* from au_role s;
            create or replace view sch_report_opred.au_role_permission as select s.* from au_role_permission s;
            create or replace view sch_report_opred.request as select id, type, status, creation_date, competent_authority, account_id, verification_body_id, payload, submission_date, metadata, end_date from request s where s.competent_authority = 'OPRED';
            create or replace view sch_report_opred.request_action as select s.* from request_action s where exists (select null from request r where r.id = s.request_id and r.competent_authority = 'OPRED');
            create or replace view sch_report_opred.request_task as select id, request_id, type, assignee, due_date, start_date, pause_date, payload, version from request_task s where exists (select null from request r where r.id = s.request_id and r.competent_authority = 'OPRED');
            create or replace view sch_report_opred.request_task_visit as select s.* from request_task_visit s where exists (select null from request_task rt join request r on r.id = rt.request_id where rt.id = s.task_id and r.competent_authority = 'OPRED');
            create or replace view sch_report_opred.verification_body as select s.* from verification_body s;
            create or replace view sch_report_opred.verification_body_emission_trading_scheme as select s.* from verification_body_emission_trading_scheme s;

            create or replace view sch_report_nrw.account as select s.* from account s where s.competent_authority = 'WALES';
            create or replace view sch_report_nrw.account_contact as select s.* from account_contact s where exists (select null from account a where a.id = s.account_id and a.competent_authority = 'WALES');
            create or replace view sch_report_nrw.account_ca_external_contacts as select s.* from account_ca_external_contacts s where s.competent_authority = 'WALES';
            create or replace view sch_report_nrw.au_authority as select s.* from au_authority s where s.competent_authority = 'WALES' or s.verification_body_id is not null or exists (select null from account a where a.id = s.account_id and a.competent_authority = 'WALES');
            create or replace view sch_report_nrw.au_authority_permission as select s.* from au_authority_permission s where exists (select null from au_authority aa where aa.id = s.authority_id and (aa.competent_authority = 'WALES' or aa.verification_body_id is not null or exists (select null from account a where a.id = aa.account_id and a.competent_authority = 'WALES')));
            create or replace view sch_report_nrw.au_role as select s.* from au_role s;
            create or replace view sch_report_nrw.au_role_permission as select s.* from au_role_permission s;
            create or replace view sch_report_nrw.request as select id, type, status, creation_date, competent_authority, account_id, verification_body_id, payload, submission_date, metadata, end_date from request s where s.competent_authority = 'WALES';
            create or replace view sch_report_nrw.request_action as select s.* from request_action s where exists (select null from request r where r.id = s.request_id and r.competent_authority = 'WALES');
            create or replace view sch_report_nrw.request_task as select id, request_id, type, assignee, due_date, start_date, pause_date, payload, version from request_task s where exists (select null from request r where r.id = s.request_id and r.competent_authority = 'WALES');
            create or replace view sch_report_nrw.request_task_visit as select s.* from request_task_visit s where exists (select null from request_task rt join request r on r.id = rt.request_id where rt.id = s.task_id and r.competent_authority = 'WALES');
            create or replace view sch_report_nrw.verification_body as select s.* from verification_body s;
            create or replace view sch_report_nrw.verification_body_emission_trading_scheme as select s.* from verification_body_emission_trading_scheme s;

            create or replace view sch_report_niea.account as select s.* from account s where s.competent_authority = 'NORTHERN_IRELAND';
            create or replace view sch_report_niea.account_contact as select s.* from account_contact s where exists (select null from account a where a.id = s.account_id and a.competent_authority = 'NORTHERN_IRELAND');
            create or replace view sch_report_niea.account_ca_external_contacts as select s.* from account_ca_external_contacts s where s.competent_authority = 'NORTHERN_IRELAND';
            create or replace view sch_report_niea.au_authority as select s.* from au_authority s where s.competent_authority = 'NORTHERN_IRELAND' or s.verification_body_id is not null or exists (select null from account a where a.id = s.account_id and a.competent_authority = 'NORTHERN_IRELAND');
            create or replace view sch_report_niea.au_authority_permission as select s.* from au_authority_permission s where exists (select null from au_authority aa where aa.id = s.authority_id and (aa.competent_authority = 'NORTHERN_IRELAND' or aa.verification_body_id is not null or exists (select null from account a where a.id = aa.account_id and a.competent_authority = 'NORTHERN_IRELAND')));
            create or replace view sch_report_niea.au_role as select s.* from au_role s;
            create or replace view sch_report_niea.au_role_permission as select s.* from au_role_permission s;
            create or replace view sch_report_niea.request as select id, type, status, creation_date, competent_authority, account_id, verification_body_id, payload, submission_date, metadata, end_date from request s where s.competent_authority = 'NORTHERN_IRELAND';
            create or replace view sch_report_niea.request_action as select s.* from request_action s where exists (select null from request r where r.id = s.request_id and r.competent_authority = 'NORTHERN_IRELAND');
            create or replace view sch_report_niea.request_task as select id, request_id, type, assignee, due_date, start_date, pause_date, payload, version from request_task s where exists (select null from request r where r.id = s.request_id and r.competent_authority = 'NORTHERN_IRELAND');
            create or replace view sch_report_niea.request_task_visit as select s.* from request_task_visit s where exists (select null from request_task rt join request r on r.id = rt.request_id where rt.id = s.task_id and r.competent_authority = 'NORTHERN_IRELAND');
            create or replace view sch_report_niea.verification_body as select s.* from verification_body s;
            create or replace view sch_report_niea.verification_body_emission_trading_scheme as select s.* from verification_body_emission_trading_scheme s;

            create or replace view sch_report_ea.account as select s.* from account s;
            create or replace view sch_report_ea.account_contact as select s.* from account_contact s;
            create or replace view sch_report_ea.account_ca_external_contacts as select s.* from account_ca_external_contacts s;
            create or replace view sch_report_ea.au_authority as select s.* from au_authority s;
            create or replace view sch_report_ea.au_authority_permission as select s.* from au_authority_permission s;
            create or replace view sch_report_ea.au_role as select s.* from au_role s;
            create or replace view sch_report_ea.au_role_permission as select s.* from au_role_permission s;
            create or replace view sch_report_ea.request as select id, type, status, creation_date, competent_authority, account_id, verification_body_id, payload, submission_date, metadata, end_date from request s;
            create or replace view sch_report_ea.request_action as select s.* from request_action s;
            create or replace view sch_report_ea.request_task as select id, request_id, type, assignee, due_date, start_date, pause_date, payload, version from request_task s;
            create or replace view sch_report_ea.request_task_visit as select s.* from request_task_visit s;
            create or replace view sch_report_ea.verification_body as select s.* from verification_body s;
            create or replace view sch_report_ea.verification_body_emission_trading_scheme as select s.* from verification_body_emission_trading_scheme s;

        </sql>
        <rollback/>
    </changeSet>
</databaseChangeLog>